name: Build Manim For Windows

on:
  push:
    branches: [ master, release-*,testing]

jobs:
  build_executables:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    - name: set-env
      run: |
        $env:PYVER="3.8.3"
        $env:PYDIR="Python38"
        echo "::set-env name=PYVER::$env:PYVER"
        echo "::set-env name=PYDIR::$env:PYDIR"
    - name: Install dependencies
      run: |
        curl -L https://aka.ms/nugetclidl -o nuget.exe
        git clone https://github.com/ManimCommunity/manim.git
        nuget install pythonx86 -Version $env:PYVER -OutputDirectory python.$env:PYVER.x86
        cd python.$env:PYVER.x86 && cp -r ../manim manim && cd ../
        nuget install python -Version $env:PYVER -OutputDirectory python.$env:PYVER.x64
        cd python.$env:PYVER.x64 && mv ../manim manim && cd ../
        curl -L https://downloads.sourceforge.net/project/nsis/NSIS%203/3.05/nsis-3.05-setup.exe -o nsisinstaller.exe
        ./nsisinstaller.exe /S /D=C:\NSIS
        $env:Path += ";" + "C:\NSIS"
        echo "::set-env name=Path::$env:Path"
        cmd.exe //c "RefreshEnv.cmd"
    - name: Build exe Files
      run: |
        cd python.$env:PYVER.x64
        ../python-x64.bat
        dir manim/
        cd ../
        cd python.$env:PYVER.x86
        ../python-x86.bat
        dir manim/
        cd ../
        makensis makeexe64.nsi
        makensis makeexe86.nsi
        7z a -sfx windows.choco.build.py3.8.3.x86.exe python.$env:PYVER.x86
        7z a -sfx windows.choco.build.py3.8.3.x64.exe python.$env:PYVER.x64
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          Changes in this Release
            - First Change
            - Second Change
        draft: true
        prerelease: true
    - name: Upload Release Asset x86
      id: upload-release-asset-zip-x86 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url:  ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./windows.choco.build.py3.8.3.x86.exe
        asset_name: windows.choco.build.py3.8.3.x86.exe
        asset_content_type: application/exe
    - name: Upload Release Asset x64
      id: upload-release-asset-zip-x64 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url:  ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./windows.choco.build.py3.8.3.x64.exe
        asset_name: windows.choco.build.py3.8.3.x64.exe
        asset_content_type: application/exe
    - name: Upload Release Asset x64
      id: upload-release-asset-exe-x64 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url:  ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./Manim_1.0x64.exe
        asset_name: Manim_1.0x64.exe
        asset_content_type: application/exe
    - name: Upload Release Asset x64
      id: upload-release-asset-exe-x86
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url:  ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./Manim_1.0x86.exe
        asset_name: ./Manim_1.0x86.exe
        asset_content_type: application/exe
  choco_test:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - name: Make choco Package
      run: |
        cd "Choco Package\manim.install"        
        choco pack
        choco install --no-progress manim.install -source "'.;https://chocolatey.org/api/v2/'"
        refreshenv
    - name: Test Generated Files
      shell: cmd
      continue-on-error: true
      run: |
        set PATH=C:\tools\pango;%PATH%
        where libcairo-2.dll
        manim -h
        curl -L https://raw.githubusercontent.com/ManimCommunity/manim/master/example_scenes/basic.py -O basic.py
        manim basic.py SquareToCircle
        choco uninstall -y manim.install

    - name: Upload Logs if failes
      uses: actions/upload-artifact@v2
      if: ${{ failure() }}
      with:
        name: chocologs
        path: C:\ProgramData\chocolatey\logs\chocolatey.log
    - name: Upload Logs
      uses: actions/upload-artifact@v2
      with:
        name: chocologs
        path: C:\ProgramData\chocolatey\logs\chocolatey.log
